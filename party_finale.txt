elseif game.PlaceId == PLACE_CASCADE then
    -- Wait for all players to load properly before making decisions
    waitForPlayersToLoad(15) -- Wait up to 15 seconds for stable player count
    
    -- Additional safety wait
    task.wait(3)
    
    -- Now check if we should leave the server
    if shouldLeaveServer() then
        safeTeleport(PLACE_MATCH)
        matchStartTime = tick()
    else
        local myGroup, myRole = getPlayerGroup()
        
        -- Extended waiting and checking for group completeness
        local maxWaitTime = 30 -- Wait up to 30 seconds for all expected players
        local checkInterval = 3 -- Check every 3 seconds
        local checksRemaining = maxWaitTime / checkInterval
        local finalGroupsPresent = nil
        
        while checksRemaining > 0 do
            local groupsPresent = getGroupsInServer()
            
            -- Count total members in each group
            local main1Count = #groupsPresent.MAIN_GROUP_1
            local main2Count = #groupsPresent.MAIN_GROUP_2  
            local farm1Count = #groupsPresent.FARM_GROUP_1
            local farm2Count = #groupsPresent.FARM_GROUP_2
            
            -- Check if we have the expected complete matchups
            local bothMainGroupsComplete = (main1Count == 4 and main2Count == 4)
            local bothFarmGroupsComplete = (farm1Count == 4 and farm2Count == 4)
            local pureMainVsMain = (bothMainGroupsComplete and farm1Count == 0 and farm2Count == 0)
            local pureFarmVsFarm = (bothFarmGroupsComplete and main1Count == 0 and main2Count == 0)
            
            -- If we detect a pure matchup, break early
            if pureMainVsMain or pureFarmVsFarm then
                finalGroupsPresent = groupsPresent
                break
            end
            
            -- If we have at least 2 complete groups of any type, continue checking but save state
            local completeGroups = 0
            if main1Count == 4 then completeGroups = completeGroups + 1 end
            if main2Count == 4 then completeGroups = completeGroups + 1 end
            if farm1Count == 4 then completeGroups = completeGroups + 1 end
            if farm2Count == 4 then completeGroups = completeGroups + 1 end
            
            if completeGroups >= 2 then
                finalGroupsPresent = groupsPresent
            end
            
            task.wait(checkInterval)
            checksRemaining = checksRemaining - 1
        end
        
        -- Use final group state for decision making
        if finalGroupsPresent then
            local main1Count = #finalGroupsPresent.MAIN_GROUP_1
            local main2Count = #finalGroupsPresent.MAIN_GROUP_2  
            local farm1Count = #finalGroupsPresent.FARM_GROUP_1
            local farm2Count = #finalGroupsPresent.FARM_GROUP_2
            
            -- Check for specific matchup scenarios
            local bothMainGroupsComplete = (main1Count == 4 and main2Count == 4)
            local bothFarmGroupsComplete = (farm1Count == 4 and farm2Count == 4)
            
            if bothMainGroupsComplete and farm1Count == 0 and farm2Count == 0 then
                -- Pure Main vs Main: Main 2 leaves after 5s, Main 1 after 40s
                if myGroup == "MAIN_GROUP_2" then
                    task.wait(5)
                    safeTeleport(PLACE_MATCH)
                    matchStartTime = tick()
                elseif myGroup == "MAIN_GROUP_1" then
                    task.wait(40)
                    safeTeleport(PLACE_MATCH)
                    matchStartTime = tick()
                end
                
            elseif bothFarmGroupsComplete and main1Count == 0 and main2Count == 0 then
                -- Pure Farm vs Farm: Farm 2 leaves after 5s, Farm 1 after 40s
                if myGroup == "FARM_GROUP_2" then
                    task.wait(5)
                    safeTeleport(PLACE_MATCH)
                    matchStartTime = tick()
                elseif myGroup == "FARM_GROUP_1" then
                    task.wait(40)
                    safeTeleport(PLACE_MATCH)
                    matchStartTime = tick()
                end
                
            else
                -- Mixed matchup or incomplete groups: Apply mixed rules
                if myGroup == "FARM_GROUP_1" or myGroup == "FARM_GROUP_2" then
                    task.wait(5)
                    safeTeleport(PLACE_MATCH)
                    matchStartTime = tick()
                elseif myGroup == "MAIN_GROUP_1" or myGroup == "MAIN_GROUP_2" then
                    task.wait(40)
                    safeTeleport(PLACE_MATCH)
                    matchStartTime = tick()
                end
            end
        else
            -- No viable groups found, leave after default wait
            task.wait(10)
            safeTeleport(PLACE_MATCH)
            matchStartTime = tick()
        end
    end