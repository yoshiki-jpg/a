-- WHISPER FEATURE TEST SCRIPT (Chat Only)
-- This script tests the whisper functionality for joining leader servers

-- SERVICES
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- TEST CONFIGURATION
local MAIN_LEADER = "3984minecraft"
local FARM_LEADER = "thelancewavers"

local ALL_ACCOUNTS = {
    9197514231, 9196674738, 9197494713, 9197461990, 9199773198, 9199762283, 9199707476, 9198864668
}

local localPlayer = Players.LocalPlayer

-- UTILITY FUNCTIONS
local function isLeaderInServer()
    local players = Players:GetPlayers()
    
    for _, player in pairs(players) do
        if player.Name == MAIN_LEADER or player.Name == FARM_LEADER then
            return true, player.Name
        end
    end
    
    return false, nil
end

local function getAvailablePlayersForWhisper()
    local availablePlayers = {}
    
    for _, player in pairs(Players:GetPlayers()) do
        local isOurAccount = false
        for _, accountId in pairs(ALL_ACCOUNTS) do
            if player.UserId == accountId then
                isOurAccount = true
                break
            end
        end
        
        if not isOurAccount then
            table.insert(availablePlayers, player)
        end
    end
    
    return availablePlayers
end

local function sendChatMessage(message)
    local success = false
    
    -- Try new TextChatService first (newer games)
    pcall(function()
        if TextChatService and TextChatService.ChatInputBarConfiguration then
            local targetChannel = TextChatService.ChatInputBarConfiguration.TargetTextChannel
            if targetChannel then
                targetChannel:SendAsync(message)
                success = true
            end
        end
    end)
    
    -- Fallback to legacy chat system
    if not success then
        pcall(function()
            local chatEvents = ReplicatedStorage:FindFirstChild("DefaultChatSystemChatEvents")
            if chatEvents then
                local sayMessage = chatEvents:FindFirstChild("SayMessageRequest")
                if sayMessage then
                    sayMessage:FireServer(message, "All")
                    success = true
                end
            end
        end)
    end
    
    return success
end

local function testWhisperFeature()
    print("=== WHISPER FEATURE TEST START ===")
    print("Local Player: " .. localPlayer.Name)
    print("Local Player ID: " .. localPlayer.UserId)
    
    -- Check if leader is in server
    local leaderPresent, leaderName = isLeaderInServer()
    print("Leader in server: " .. tostring(leaderPresent))
    if leaderPresent then
        print("Leader found: " .. leaderName)
        print("TEST RESULT: No need to send whisper commands - leader is present!")
        return
    else
        print("No leader found in server")
    end
    
    -- Get available players
    local availablePlayers = getAvailablePlayersForWhisper()
    print("Available players for whisper: " .. #availablePlayers)
    
    for i, player in pairs(availablePlayers) do
        print("  " .. i .. ". " .. player.Name .. " (ID: " .. player.UserId .. ")")
    end
    
    if #availablePlayers == 0 then
        print("TEST RESULT: No available players to whisper to!")
        return
    end
    
    print("\n=== STARTING WHISPER SEQUENCE ===")
    
    local usedPlayers = {}
    
    for i = 1, 3 do
        print("\n--- Iteration " .. i .. " ---")
        
        -- Get remaining players
        local remainingPlayers = {}
        for _, player in pairs(availablePlayers) do
            if not usedPlayers[player.UserId] then
                table.insert(remainingPlayers, player)
            end
        end
        
        -- Reset if no remaining players
        if #remainingPlayers == 0 then
            print("No remaining players, resetting used list...")
            usedPlayers = {}
            remainingPlayers = availablePlayers
        end
        
        if #remainingPlayers > 0 then
            -- Select random player
            local randomIndex = math.random(1, #remainingPlayers)
            local targetPlayer = remainingPlayers[randomIndex]
            usedPlayers[targetPlayer.UserId] = true
            
            -- Determine target leader (alternating)
            local targetLeader
            if i % 2 == 1 then
                targetLeader = MAIN_LEADER
                print("Using MAIN leader: " .. targetLeader)
            else
                targetLeader = FARM_LEADER
                print("Using FARM leader: " .. targetLeader)
            end
            
            -- Create whisper command
            local command = "/whisper " .. targetPlayer.Name .. " !joinserver " .. targetLeader
            print("Sending command: " .. command)
            print("Target player: " .. targetPlayer.Name .. " (ID: " .. targetPlayer.UserId .. ")")
            
            -- Send the command
            local success = sendChatMessage(command)
            if success then
                print("✓ Command sent successfully!")
            else
                print("✗ Failed to send command")
            end
        else
            print("No players available for this iteration")
        end
        
        -- Wait before next iteration (except last)
        if i < 3 then
            print("Waiting 10 seconds before next iteration...")
            for countdown = 10, 1, -1 do
                print("  " .. countdown .. "...")
                task.wait(1)
            end
        end
    end
    
    print("\n=== WHISPER FEATURE TEST COMPLETE ===")
end

-- AUTO-START
print("=== WHISPER FEATURE TEST SCRIPT LOADED ===")
print("Starting test in 3 seconds...")
task.wait(3)
testWhisperFeature()

-- MANUAL FUNCTION FOR CONSOLE USE
_G.testWhisper = testWhisperFeature
print("Manual function available: _G.testWhisper()")
