-- SERVICES
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")

-- CONFIGURATION
local MAIN_GROUP = {
    Leader = {Name = "3malaysians", UserId = 9247717801},
    Members = {
        {Name = "3ramlyborigar", UserId = 9252243951},
        {Name = "3mcdoharris", UserId = 9252259406},
        {Name = "3familialhamly", UserId = 9252229000},
    }
}

local FARM_GROUP = {
    Leader = {Name = "nguy83748", UserId = 9251688294},
    Members = {
        {Name = "elar87482", UserId = 9252971862},
        {Name = "reedfantastic04", UserId = 9253020411},
        {Name = "abhgemgfd", UserId = 9253013396},
    }
}

local ALL_ACCOUNTS = {
    9247717801, 9252243951, 9252259406, 9252229000, 9251688294, 9252971862, 9253020411, 9253013396
}

local PLACE_MAIN = 14067600077
local PLACE_MATCH = 18637069183
local PLACE_CASCADE = 138059541435332

local localPlayer = Players.LocalPlayer

-- UTILITY FUNCTIONS
local function waitForGameLoaded()
    if not game:IsLoaded() then
        game.Loaded:Wait()
    end
end

local function safeTeleport(placeId)
    local attempts = 0
    while true do
        attempts = attempts + 1
        
        local success = pcall(function()
            TeleportService:Teleport(placeId, localPlayer)
        end)
        
        if success then 
            break 
        end
        task.wait(5)
    end
end

local function allAccountsInServer()
    local count = 0
    
    for _, player in pairs(Players:GetPlayers()) do
        for _, accountId in pairs(ALL_ACCOUNTS) do
            if player.UserId == accountId then
                count = count + 1
                break
            end
        end
    end
    
    return count == #ALL_ACCOUNTS
end

local function waitForRemotesReady()
    local ready = false
    local attempts = 0
    while not ready and attempts < 60 do
        attempts = attempts + 1
        
        ready = pcall(function()
            ReplicatedStorage:WaitForChild("Remotes", 1)
            ReplicatedStorage.Remotes:WaitForChild("Team", 1)
            return true
        end)
        
        if not ready then 
            task.wait(1) 
        end
    end
    
    return ready
end

local function inviteMembers()
    if localPlayer.Name == MAIN_GROUP.Leader.Name then
        for attempt = 1, 3 do
            for _, member in pairs(MAIN_GROUP.Members) do
                pcall(function()
                    local targetPlayer = Players:FindFirstChild(member.Name)
                    if targetPlayer then
                        local args = {"Invite", targetPlayer}
                        ReplicatedStorage.Remotes.Team:FireServer(unpack(args))
                    end
                end)
                task.wait(2)
            end
            if attempt < 3 then
                task.wait(8)
            end
        end
        
    elseif localPlayer.Name == FARM_GROUP.Leader.Name then
        for attempt = 1, 3 do
            for _, member in pairs(FARM_GROUP.Members) do
                pcall(function()
                    local targetPlayer = Players:FindFirstChild(member.Name)
                    if targetPlayer then
                        local args = {"Invite", targetPlayer}
                        ReplicatedStorage.Remotes.Team:FireServer(unpack(args))
                    end
                end)
                task.wait(2)
            end
            if attempt < 3 then
                task.wait(8)
            end
        end
    end
end

local function acceptInvites()
    local leaderName = nil
    
    for _, member in pairs(MAIN_GROUP.Members) do
        if localPlayer.Name == member.Name then
            leaderName = MAIN_GROUP.Leader.Name
            break
        end
    end
    
    if not leaderName then
        for _, member in pairs(FARM_GROUP.Members) do
            if localPlayer.Name == member.Name then
                leaderName = FARM_GROUP.Leader.Name
                break
            end
        end
    end
    
    if leaderName then
        for i = 1, 3 do
            pcall(function()
                local leaderPlayer = Players:FindFirstChild(leaderName)
                if leaderPlayer then
                    local args = {"AcceptInvite", leaderPlayer}
                    ReplicatedStorage.Remotes.Team:FireServer(unpack(args))
                end
            end)
            task.wait(5)
        end
    end
end

local function startQueue()
    if localPlayer.UserId == MAIN_GROUP.Leader.UserId or localPlayer.UserId == FARM_GROUP.Leader.UserId then
        for attempt = 1, 3 do
            pcall(function()
                local args = {"JoinQueue", "CASCADE"}
                ReplicatedStorage.Remotes.Team:FireServer(unpack(args))
            end)
            if attempt < 3 then
                task.wait(5)
            end
        end
    end
end

local function isMainGroupMember()
    if localPlayer.UserId == MAIN_GROUP.Leader.UserId then return true end
    for _, member in pairs(MAIN_GROUP.Members) do
        if localPlayer.UserId == member.UserId then return true end
    end
    return false
end

local function isFarmGroupMember()
    if localPlayer.UserId == FARM_GROUP.Leader.UserId then return true end
    for _, member in pairs(FARM_GROUP.Members) do
        if localPlayer.UserId == member.UserId then return true end
    end
    return false
end

-- MAIN EXECUTION
local function runPartyManager()
    waitForGameLoaded()
    
    local matchStartTime = tick()
    
    while true do
        if game.PlaceId == PLACE_MAIN then
            safeTeleport(PLACE_MATCH)
            
        elseif game.PlaceId == PLACE_MATCH then
            task.wait(10)
            
            while not allAccountsInServer() do
                local elapsed = tick() - matchStartTime
                
                if elapsed > 300 then
                    safeTeleport(PLACE_MATCH)
                    matchStartTime = tick()
                    break
                end
                task.wait(15)
            end
            
            if allAccountsInServer() then
                local remotesReady = waitForRemotesReady()
                
                if remotesReady then
                    inviteMembers()
                    task.wait(3)
                    
                    acceptInvites()
                    task.wait(10)
                    
                    startQueue()
                    return
                end
            end
            
        elseif game.PlaceId == PLACE_CASCADE then
            task.wait(10)
            
            if isFarmGroupMember() then
                safeTeleport(PLACE_MATCH)
            end
            
            task.wait(20)
            
            if isMainGroupMember() then
                safeTeleport(PLACE_MATCH)
            end
            
            matchStartTime = tick()
            
        end
        
        task.wait(1)
    end
end

-- START SCRIPT
spawn(runPartyManager)
